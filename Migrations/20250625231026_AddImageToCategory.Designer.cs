// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TechSummary.Models;

#nullable disable

namespace TechSummary.Migrations
{
    [DbContext(typeof(TechSummaryContext))]
    [Migration("20250625231026_AddImageToCategory")]
    partial class AddImageToCategory
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TechSummary.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PK__Category__3214EC07CE52F71A");

                    b.HasIndex("CreatedBy");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("TechSummary.Models.Content", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ContentTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("TopicId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("UploadedBy")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Views")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id")
                        .HasName("PK__Content__3214EC0788F513BC");

                    b.HasIndex("ContentTypeId");

                    b.HasIndex("TopicId");

                    b.HasIndex("UploadedBy");

                    b.ToTable("Content", (string)null);
                });

            modelBuilder.Entity("TechSummary.Models.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PK__Language__3214EC07261BC657");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CreatedBy");

                    b.ToTable("Language", (string)null);
                });

            modelBuilder.Entity("TechSummary.Models.LookupItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("LookupTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__LookupIt__3214EC079D2F3E6D");

                    b.HasIndex("LookupTypeId");

                    b.ToTable("LookupItem", (string)null);
                });

            modelBuilder.Entity("TechSummary.Models.LookupType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__LookupTy__3214EC072C70C8D9");

                    b.HasIndex(new[] { "Name" }, "UQ__LookupTy__737584F6F22B8C78")
                        .IsUnique();

                    b.ToTable("LookupType", (string)null);
                });

            modelBuilder.Entity("TechSummary.Models.Rating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ContentId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Message")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("RateAmount")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Rating__3214EC07AAD91529");

                    b.HasIndex("UserId");

                    b.HasIndex(new[] { "ContentId", "UserId" }, "UQ_Rating")
                        .IsUnique()
                        .HasFilter("[ContentId] IS NOT NULL AND [UserId] IS NOT NULL");

                    b.ToTable("Rating", (string)null);
                });

            modelBuilder.Entity("TechSummary.Models.Topic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int?>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PK__Topic__3214EC079B4CFD23");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("LanguageId");

                    b.ToTable("Topic", (string)null);
                });

            modelBuilder.Entity("TechSummary.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("GenderId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PK__User__3214EC07E51AAD46");

                    b.HasIndex("GenderId");

                    b.HasIndex("RoleId");

                    b.HasIndex(new[] { "Email" }, "UQ__User__A9D10534BC8D4648")
                        .IsUnique();

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("TechSummary.Models.Category", b =>
                {
                    b.HasOne("TechSummary.Models.User", "CreatedByNavigation")
                        .WithMany("Categories")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK__Category__Create__440B1D61");

                    b.Navigation("CreatedByNavigation");
                });

            modelBuilder.Entity("TechSummary.Models.Content", b =>
                {
                    b.HasOne("TechSummary.Models.LookupItem", "ContentType")
                        .WithMany("Contents")
                        .HasForeignKey("ContentTypeId")
                        .HasConstraintName("FK__Content__Content__5441852A");

                    b.HasOne("TechSummary.Models.Topic", "Topic")
                        .WithMany("Contents")
                        .HasForeignKey("TopicId")
                        .HasConstraintName("FK__Content__TopicId__5535A963");

                    b.HasOne("TechSummary.Models.User", "UploadedByNavigation")
                        .WithMany("Contents")
                        .HasForeignKey("UploadedBy")
                        .HasConstraintName("FK__Content__Uploade__5629CD9C");

                    b.Navigation("ContentType");

                    b.Navigation("Topic");

                    b.Navigation("UploadedByNavigation");
                });

            modelBuilder.Entity("TechSummary.Models.Language", b =>
                {
                    b.HasOne("TechSummary.Models.Category", "Category")
                        .WithMany("Languages")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK__Language__Catego__48CFD27E");

                    b.HasOne("TechSummary.Models.User", "CreatedByNavigation")
                        .WithMany("Languages")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK__Language__Create__49C3F6B7");

                    b.Navigation("Category");

                    b.Navigation("CreatedByNavigation");
                });

            modelBuilder.Entity("TechSummary.Models.LookupItem", b =>
                {
                    b.HasOne("TechSummary.Models.LookupType", "LookupType")
                        .WithMany("LookupItems")
                        .HasForeignKey("LookupTypeId")
                        .HasConstraintName("FK__LookupIte__Looku__3A81B327");

                    b.Navigation("LookupType");
                });

            modelBuilder.Entity("TechSummary.Models.Rating", b =>
                {
                    b.HasOne("TechSummary.Models.Content", "Content")
                        .WithMany("Ratings")
                        .HasForeignKey("ContentId")
                        .HasConstraintName("FK__Rating__ContentI__5CD6CB2B");

                    b.HasOne("TechSummary.Models.User", "User")
                        .WithMany("Ratings")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Rating__UserId__5DCAEF64");

                    b.Navigation("Content");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TechSummary.Models.Topic", b =>
                {
                    b.HasOne("TechSummary.Models.User", "CreatedByNavigation")
                        .WithMany("Topics")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK__Topic__CreatedBy__4F7CD00D");

                    b.HasOne("TechSummary.Models.Language", "Language")
                        .WithMany("Topics")
                        .HasForeignKey("LanguageId")
                        .HasConstraintName("FK__Topic__LanguageI__4E88ABD4");

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("TechSummary.Models.User", b =>
                {
                    b.HasOne("TechSummary.Models.LookupItem", "Gender")
                        .WithMany("UserGenders")
                        .HasForeignKey("GenderId")
                        .HasConstraintName("FK__User__GenderId__3E52440B");

                    b.HasOne("TechSummary.Models.LookupItem", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK__User__RoleId__3F466844");

                    b.Navigation("Gender");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("TechSummary.Models.Category", b =>
                {
                    b.Navigation("Languages");
                });

            modelBuilder.Entity("TechSummary.Models.Content", b =>
                {
                    b.Navigation("Ratings");
                });

            modelBuilder.Entity("TechSummary.Models.Language", b =>
                {
                    b.Navigation("Topics");
                });

            modelBuilder.Entity("TechSummary.Models.LookupItem", b =>
                {
                    b.Navigation("Contents");

                    b.Navigation("UserGenders");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("TechSummary.Models.LookupType", b =>
                {
                    b.Navigation("LookupItems");
                });

            modelBuilder.Entity("TechSummary.Models.Topic", b =>
                {
                    b.Navigation("Contents");
                });

            modelBuilder.Entity("TechSummary.Models.User", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("Contents");

                    b.Navigation("Languages");

                    b.Navigation("Ratings");

                    b.Navigation("Topics");
                });
#pragma warning restore 612, 618
        }
    }
}
